// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id         String  @id @default(cuid())
  // email    String  @unique   // ❌ removed
  phoneE164  String
  accessCode String  @unique

  orders     Order[]
}

model Order {
  id            String   @id @default(cuid())
  orderNumber   String   @unique

  // Client identity (no email)
  customerName  String
  customerPhone String      @default("")

  // Route instead of addresses
  fromCountry   String      @default("Unknown")
  toCountry     String      @default("Unknown")

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Optional total weight
  weightKg      Decimal  @db.Decimal(10,3) @default(0)

  customerId    String?
  customer      Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)

  shipment      Shipment?
  items         Item[]
}

model Item {
  id        String  @id @default(cuid())
  // sku     String              // ❌ removed
  name      String
  quantity  Int

  // Dual currency prices
  priceAED  Decimal @db.Decimal(10,2) @default(0)
  priceMRU  Decimal @db.Decimal(10,2) @default(0)

  // Optional per-unit weight
  weightKg  Decimal @db.Decimal(10,3) @default(0)

  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Shipment {
  id              String   @id @default(cuid())
  trackingNumber  String   @unique
  carrier         String
  serviceLevel    String
  status          String   @default("Created")
  estimatedDate   DateTime?

  orderId         String   @unique
  order           Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  events          TrackingEvent[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TrackingEvent {
  id          String   @id @default(cuid())
  status      String
  location    String
  description String?
  eventTime   DateTime @default(now())

  shipmentId  String
  shipment    Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
}
